{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-01T13:42:20.261Z",
    "end": "2022-09-01T13:42:25.180Z",
    "duration": 4389,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e7bb6740-39dd-4844-9b46-ff947870da38",
      "title": "",
      "fullFile": "cypress/integration/Features/API/httpStatusCodes.feature",
      "file": "cypress/integration/Features/API/httpStatusCodes.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b5350e89-3412-4310-82b2-acd64be98aa4",
          "title": "Verify APIs are returning correct HTTP status codes",
          "fullFile": "cypress/integration/Features/API/httpStatusCodes.feature",
          "file": "cypress/integration/Features/API/httpStatusCodes.feature",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "The 'Search all power plants' API is returning correct status code",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Search all power plants' API is returning correct status code",
              "timedOut": null,
              "duration": 1193,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "144fb46c-4d29-43ce-8b9e-8c92f54b6d85",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The 'Search top N power plants' API is returning correct status code",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Search top N power plants' API is returning correct status code",
              "timedOut": null,
              "duration": 1145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b7a73e3d-4a2f-40db-91ed-bf6effc70f8f",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The 'Gives the details of a power plant' API is returning correct status code",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Gives the details of a power plant' API is returning correct status code",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "20eba918-9346-44b1-a984-afc08f6ad811",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The 'Search power plants in a state' API is returning correct status code (example #1)",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Search power plants in a state' API is returning correct status code (example #1)",
              "timedOut": null,
              "duration": 522,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6b459572-1cbb-4893-8934-424bb8a3f0dd",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The 'Search power plants in a state' API is returning correct status code (example #2)",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Search power plants in a state' API is returning correct status code (example #2)",
              "timedOut": null,
              "duration": 382,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8bd07a34-d5a6-4516-ae8c-7dc33b9787a4",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The 'Search power plants in a state' API is returning correct status code (example #3)",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Search power plants in a state' API is returning correct status code (example #3)",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bc9b8c8d-8fe8-470a-876e-9539ce5821c8",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The 'Search actual and percentage of plant's federal state' API is returning correct status code (example #1)",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Search actual and percentage of plant's federal state' API is returning correct status code (example #1)",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2d0ee932-f747-45f8-bf50-ec283c0c39c2",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The 'Search actual and percentage of plant's federal state' API is returning correct status code (example #2)",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Search actual and percentage of plant's federal state' API is returning correct status code (example #2)",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "95801fe4-30c7-4a0d-af8a-6c168509840b",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The 'Search actual and percentage of plant's federal state' API is returning correct status code (example #3)",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Search actual and percentage of plant's federal state' API is returning correct status code (example #3)",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fbf6b09b-35e8-4eab-9e3f-e0e758385979",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The 'Provide array of unique states' API is returning correct status code",
              "fullTitle": "Verify APIs are returning correct HTTP status codes The 'Provide array of unique states' API is returning correct status code",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8df04702-8b44-40e5-9dda-28ae50ddbc77",
              "parentUUID": "b5350e89-3412-4310-82b2-acd64be98aa4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "144fb46c-4d29-43ce-8b9e-8c92f54b6d85",
            "b7a73e3d-4a2f-40db-91ed-bf6effc70f8f",
            "20eba918-9346-44b1-a984-afc08f6ad811",
            "6b459572-1cbb-4893-8934-424bb8a3f0dd",
            "8bd07a34-d5a6-4516-ae8c-7dc33b9787a4",
            "bc9b8c8d-8fe8-470a-876e-9539ce5821c8",
            "2d0ee932-f747-45f8-bf50-ec283c0c39c2",
            "95801fe4-30c7-4a0d-af8a-6c168509840b",
            "fbf6b09b-35e8-4eab-9e3f-e0e758385979",
            "8df04702-8b44-40e5-9dda-28ae50ddbc77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4389,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/htmlreport/.jsons",
        "charts": true,
        "overwrite": false,
        "showPending": false,
        "showSkipped": true,
        "saveJson": true,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}
