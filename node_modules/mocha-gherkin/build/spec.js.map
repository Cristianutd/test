{"version":3,"sources":["spec.js"],"names":["inherits","utils","Base","reporters","cursor","GherkinSpec","runner","call","indents","n","useColors","enabled","indent","Array","join","on","console","log","suite","text","title","name","underline","bold","stories","forEach","story","green","color","test","cyan","fmt","symbols","ok","speed","CR","duration","red","epilogue","bind","exports","module"],"mappings":";;AAAA;;AAAA;;;;AACA;;;;;;AAEA,IAAAA,WAAA,gBAAAC,KAAA,CAAAD,QAAA;AACA,IAAAE,OAAA,gBAAAC,SAAA,CAAAD,IAAA;AACA,IAAAE,SAAAF,KAAAE,MAAA;;AAEA;;;;;;AAMA,SAAAC,WAAA,CAAAC,MAAA,EAAA;AACAJ,OAAAK,IAAA,CAAA,IAAA,EAAAD,MAAA;;AAEA,MAAAE,UAAA,CAAA;AACA,MAAAC,IAAA,CAAA;;AAEA,MAAA,CAAAP,KAAAQ,SAAA,EAAA;AACA,mBAAAC,OAAA,GAAA,KAAA;AACA;;AAEA,WAAAC,MAAA,GAAA;AACA,WAAAC,MAAAL,OAAA,EAAAM,IAAA,CAAA,IAAA,CAAA;AACA;;AAEAR,SAAAS,EAAA,CAAA,OAAA,EAAA,YAAA;AACAC,YAAAC,GAAA;AACA,GAFA;;AAIAX,SAAAS,EAAA,CAAA,OAAA,EAAA,UAAAG,KAAA,EAAA;AACAV,eAAA,CAAA;;AAEA,QAAAW,OAAAD,MAAAE,KAAA;AACA,YAAAF,MAAAG,IAAA;AACA,WAAA,SAAA;AACAF,eAAA,eAAAG,SAAA,CAAAC,IAAA,CAAAL,MAAAE,KAAA,CAAA;AACAF,cAAAM,OAAA,CAAAC,OAAA,CAAA,UAAAC,KAAA,EAAA;AACAP,yBAAAP,QAAA,UAAAc,KAAA;AACA,SAFA;AAGA;AACA,WAAA,UAAA;AACAP,eAAA,eAAAQ,KAAA,CAAAT,MAAAE,KAAA,CAAA;AACA;AACA;AACAD,eAAAjB,KAAA0B,KAAA,CAAA,OAAA,EAAAT,IAAA,CAAA;AAXA;AAaAH,YAAAC,GAAA,CAAAL,WAAAO,IAAA;AACA,GAlBA;;AAoBAb,SAAAS,EAAA,CAAA,WAAA,EAAA,YAAA;AACAP,eAAA,CAAA;AACA,QAAAA,YAAA,CAAA,EAAA;AACAQ,cAAAC,GAAA;AACA;AACA,GALA;;AAOAX,SAAAS,EAAA,CAAA,SAAA,EAAA,UAAAc,IAAA,EAAA;AACAb,YAAAC,GAAA,CAAAL,QAAA,UAAA,eAAAkB,IAAA,QAAAD,KAAAT,KAAA,CAAA;AACA,GAFA;;AAIAd,SAAAS,EAAA,CAAA,MAAA,EAAA,UAAAc,IAAA,EAAA;AACA,QAAAE,MAAAnB,WAAA,eAAAe,KAAA,QAAAzB,KAAA8B,OAAA,CAAAC,EAAA,SAAA;AACA,QAAAJ,KAAAK,KAAA,KAAA,MAAA,EAAA;AACA9B,aAAA+B,EAAA;AACAnB,cAAAC,GAAA,CAAAc,GAAA,EAAAF,KAAAT,KAAA;AACA,KAHA,MAGA;AACAW,aAAA7B,KAAA0B,KAAA,CAAAC,KAAAK,KAAA,EAAA,SAAA,CAAA;AACA9B,aAAA+B,EAAA;AACAnB,cAAAC,GAAA,CAAAc,GAAA,EAAAF,KAAAT,KAAA,EAAAS,KAAAO,QAAA;AACA;AACA,GAVA;;AAYA9B,SAAAS,EAAA,CAAA,MAAA,EAAA,UAAAc,IAAA,EAAA;AACAzB,WAAA+B,EAAA;AACA1B,SAAA,CAAA;AACAO,YAAAC,GAAA,CAAAL,QAAA,UAAA,eAAAyB,GAAA,CAAA,QAAA,CAAA,EAAA5B,CAAA,EAAAoB,KAAAT,KAAA;AACA,GAJA;;AAMAd,SAAAS,EAAA,CAAA,KAAA,EAAA,KAAAuB,QAAA,CAAAC,IAAA,CAAA,IAAA,CAAA;AACA;;AAEA;AACAvC,SAAAK,WAAA,EAAAH,IAAA;;AAEA;AACAsC,UAAAC,OAAAD,OAAA,GAAAnC,WAAA","file":"spec.js","sourcesContent":["import Mocha from 'mocha';\nimport colors from 'colors/safe';\n\nconst inherits = Mocha.utils.inherits;\nconst Base     = Mocha.reporters.Base;\nconst cursor   = Base.cursor;\n\n/**\n * Initialize a new `GherkinSpec` test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction GherkinSpec(runner) {\n  Base.call(this, runner);\n\n  let indents = 0;\n  let n       = 0;\n\n  if (!Base.useColors) {\n    colors.enabled = false;\n  }\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on('start', () => {\n    console.log();\n  });\n\n  runner.on('suite', (suite) => {\n    indents += 1;\n\n    let text = suite.title;\n    switch (suite.name) {\n      case 'Feature':\n        text = colors.underline.bold(suite.title);\n        suite.stories.forEach((story) => {\n          text += `\\n${indent()}  ${story}`;\n        });\n        break;\n      case 'Scenario':\n        text = colors.green(suite.title);\n        break;\n      default:\n        text = Base.color('suite', text);\n    }\n    console.log(indent() + text);\n  });\n\n  runner.on('suite end', () => {\n    indents -= 1;\n    if (indents === 1) {\n      console.log();\n    }\n  });\n\n  runner.on('pending', (test) => {\n    console.log(`${indent()}  ${colors.cyan(`- ${test.title}`)}`);\n  });\n\n  runner.on('pass', (test) => {\n    let fmt = indent() + colors.green(`  ${Base.symbols.ok} %s`);\n    if (test.speed === 'fast') {\n      cursor.CR();\n      console.log(fmt, test.title);\n    } else {\n      fmt += Base.color(test.speed, ' (%dms)');\n      cursor.CR();\n      console.log(fmt, test.title, test.duration);\n    }\n  });\n\n  runner.on('fail', (test) => {\n    cursor.CR();\n    n += 1;\n    console.log(`${indent()}  ${colors.red('%d) %s')}`, n, test.title);\n  });\n\n  runner.on('end', this.epilogue.bind(this));\n}\n\n// Inherit from `Base.prototype`.\ninherits(GherkinSpec, Base);\n\n// Expose `GherkinSpec`.\nexports = module.exports = GherkinSpec;\n"],"sourceRoot":"../src"}